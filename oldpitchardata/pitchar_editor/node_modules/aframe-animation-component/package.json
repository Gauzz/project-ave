{
  "name": "aframe-animation-component",
  "version": "5.1.2",
  "description": "Animations in A-Frame using anime.js",
  "main": "index.js",
  "cdn": "dist/aframe-animation-component.min.js",
  "scripts": {
    "dev": "budo index.js:dist/aframe-animation-component.min.js --port 7000 --live --open",
    "dist": "webpack index.js dist/aframe-animation-component.js && webpack -p index.js dist/aframe-animation-component.min.js",
    "lint": "semistandard -v | snazzy",
    "prepublish": "npm run dist",
    "start": "npm run dev",
    "test": "karma start ./tests/karma.conf.js",
    "test:firefox": "karma start ./tests/karma.conf.js --browsers Firefox",
    "test:chrome": "karma start ./tests/karma.conf.js --browsers Chrome"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ngokevin/kframe.git"
  },
  "keywords": [
    "aframe",
    "aframe-component",
    "aframe-vr",
    "vr",
    "mozvr",
    "webvr"
  ],
  "author": {
    "name": "Kevin Ngo",
    "email": "me@ngokevin.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/ngokevin/kframe/issues"
  },
  "homepage": "https://github.com/ngokevin/kframe/tree/components/animation#readme",
  "dependencies": {
    "animejs": "2.2.0"
  },
  "devDependencies": {
    "aframe": "^0.5.0",
    "browserify": "^13.0.0",
    "budo": "^8.2.2",
    "chai": "^3.4.1",
    "chai-shallow-deep-equal": "^1.3.0",
    "karma": "^0.13.15",
    "karma-browserify": "^4.4.2",
    "karma-chai-shallow-deep-equal": "0.0.4",
    "karma-chrome-launcher": "2.0.0",
    "karma-env-preprocessor": "^0.1.1",
    "karma-firefox-launcher": "^0.1.7",
    "karma-mocha": "^0.2.1",
    "karma-mocha-reporter": "^1.1.3",
    "karma-sinon-chai": "^1.1.0",
    "mocha": "^2.3.4",
    "randomcolor": "^0.4.4",
    "semistandard": "^8.0.0",
    "shelljs": "^0.7.0",
    "shx": "^0.1.1",
    "sinon": "^1.17.5",
    "sinon-chai": "^2.8.0",
    "snazzy": "^4.0.0",
    "webpack": "^1.13.0"
  },
  "semistandard": {
    "ignore": [
      "examples/build.js",
      "dist/**"
    ]
  },
  "readme": "## aframe-animation-component\n\n[animationtimeline]: https://github.com/ngokevin/kframe/tree/master/components/animation-timeline\n\nAn animation component for [A-Frame](https://aframe.io) using\n[anime.js](https://github.com/juliangarnier/anime).\n\nAlso check out the [animation-timeline component][animationtimeline] for\ndefining and orchestrating timelines of animations.\n\n![animation](https://cloud.githubusercontent.com/assets/674727/23724348/3991d594-0401-11e7-9b90-31ef43ee7e54.gif)\n\nLatest version requires A-Frame v0.8.0.\n\n### API\n\n#### Properties\n\n| Property      | Description                                                                                                                                                                                                                                                                                  | Default Value | Values                  |\n| --------      | -----------                                                                                                                                                                                                                                                                                  | ------------- | ------                  |\n| property      | Property to animate. Can be a component name, a dot-delimited property of a component (e.g., `material.color`), or a plain attribute.                                                                                                                                                        |               |                         |\n| isRawProperty | Flag to animate an arbitrary object property outside of A-Frame components for better performance. If set to true, for example, we can set `property` to like `components.material.material.opacity`. If `property` starts with `components` or `object3D`, this will be inferred to `true`. | false         |                         |\n| from          | Initial value at start of animation. If not specified, the current property value of the entity will be used (will be sampled on each animation start). It is best to specify a `from` value when possible for stability.                                                                    | null          |                         |\n| to            | Target value at end of animation.                                                                                                                                                                                                                                                            | null          |                         |\n| type          | Right now only supports `color` for tweening `isRawProperty` color XYZ/RGB vector  values.                                                                                                                                                                                                   | ''            |                         |\n| delay         | How long (milliseconds) to wait before starting.                                                                                                                                                                                                                                             | 0             |                         |\n| dir           | Which dir to go from `from` to `to`.                                                                                                                                                                                                                                                         | normal        | alternate, reverse      |\n| dur           | How long (milliseconds) each cycle of the animation is.                                                                                                                                                                                                                                      | 1000          |                         |\n| easing        | Easing function of animation. To ease in, ease out, ease in and out.                                                                                                                                                                                                                         | easeInQuad    | See [easings](#easings) |\n| elasticity    | How much to bounce (higher is stronger).                                                                                                                                                                                                                                                     | 400           |                         |\n| loop          | How many times the animation should repeat. If the value is `true`, the animation will repeat infinitely.                                                                                                                                                                                    | 0             |                         |\n| round         | Whether to round values.                                                                                                                                                                                                                                                                     | false         |                         |\n| startEvents   | Comma-separated list of events to listen to trigger play/restart. Animation will not autoplay if specified.                                                                                                                                                                                  | null          |                         |\n| pauseEvents   | Comma-separated list of events to listen to trigger pause. Can be resumed with `resumeEvents`.                                                                                                                                                                                               | null          |                         |\n| resumeEvents  | Comma-separated list of events to listen to trigger resume after pausing.                                                                                                                                                                                                                    | null          |                         |\n| autoplay      | Whether or not the animation should `autoplay`. Should be specified if the animation is defined for the [`animation-timeline` component][animationtimeline].                                                                                                                                 | null          |                         |\n| enabled       | Toggle startEvents effect.                                                                                                                                                                                                                                                                   | true          |\n\n#### Multiple Animations\n\nBase name is `animation`. We can attach multiple animations to one entity by\nname-spacing the component with double underscores (`__`):\n\n```html\n<a-entity animation=\"property: rotation\"\n          animation__2=\"property: position\"\n          animation__color=\"property: material.color\"></a-entity>\n```\n\n#### Easings\n\n| easeIn        | easeOut        | easeInOut\n|---------------|----------------|------------------|\n| easeInQuad    | easeOutQuad    | easeInOutQuad    |\n| easeInCubic   | easeOutCubic   | easeInOutCubic   |\n| easeInQuart   | easeOutQuart   | easeInOutQuart   |\n| easeInQuint   | easeOutQuint   | easeInOutQuint   |\n| easeInSine    | easeOutSine    | easeInOutSine    |\n| easeInExpo    | easeOutExpo    | easeInOutExpo    |\n| easeInCirc    | easeOutCirc    | easeInOutCirc    |\n| easeInBack    | easeOutBack    | easeInOutBack    |\n| easeInElastic | easeOutElastic | easeInOutElastic |\n\n#### Events\n\n| Property          | Description                                                     |\n| --------          | -----------                                                     |\n| animationbegin    | Animation began. Event detail contains `name` of animation.     |\n| animationcomplete | Animation completed. Event detail contains `name` of animation. |\n\n#### Members\n\n| Member    | Description      |\n|-----------|------------------|\n| animation | anime.js object. |\n\n#### Using anime.js Directly\n\nanime is a popular and powerful animation engine. The component prefers to do\njust basic tweening and touches only the surface of what anime can do (e.g.,\ntimelines, motion paths, progress, seeking). If we need more animation\nfeatures, create a separate component that uses anime.js directly. anime is\naccessible via **`AFRAME.anime`**.\n\nRead through and explore the [anime.js\ndocumentation](https://github.com/juliangarnier/anime) and\n[website](https://animejs.com).\n\n### Installation\n\n#### Browser\n\nInstall and use by directly including the [browser files](dist):\n\n```html\n<head>\n  <title>My A-Frame Scene</title>\n  <script src=\"https://aframe.io/releases/0.8.0/aframe.min.js\"></script>\n  <script src=\"https://unpkg.com/aframe-animation-component@^4.1.2/dist/aframe-animation-component.min.js\"></script>\n</head>\n\n<body>\n  <a-scene>\n    <a-entity geometry=\"primitive: box\" material=\"color: black\"\n              animation__color=\"property: material.color; dir: alternate; dur: 1000;\n                                easing: easeInSine; loop: true; to: #FFF\">\n    </a-entity>\n\n    <a-entity geometry=\"primitive: box\" material=\"color: orange\"\n              animation__fadein=\"property: material.opacity; dur: 100;\n                                  easing: linear; from 0; to: 1; startEvents: fadein\"\n              animation__fadeout=\"property: material.opacity; dur: 100;\n                                  easing: linear; from 1; to: 0; startEvents: fadeout\"\n    </a-entity>\n\n    <a-cylinder color=\"#F55\" radius=\"0.1\"\n                animation=\"property: color; dir: alternate; dur: 1000;\n                           easing: easeInSine; loop: true; to: #5F5\"\n                animation__scale=\"property: scale; dir: alternate; dur: 200;\n                           easing: easeInSine; loop: true; to: 1.2 1 1.2\"\n                animation__yoyo=\"property: position; dir: alternate; dur: 1000;\n                                 easing: easeInSine; loop: true; to: 0 2 0\">\n    </a-cylinder>\n\n  </a-scene>\n</body>\n```\n\n#### npm\n\nInstall via npm:\n\n```bash\nnpm install aframe-animation-component\n```\n\nThen register and use.\n\n```js\nrequire('aframe');\nrequire('aframe-animation-component');\n```\n\n### Versus `<a-animation>`\n\nI expect to deprecate `<a-animation>` in favor for this component.\n\n- **Imperative Ergonomics:** Imperatively set animations and all of its\n  properties with a single `setAttribute` call. With `<a-animation>`, we must\n  do `createElement`, multiple `setAttribute`s, `appendChild`, and\n  `addEventListener('loaded')`.\n- **Performance:** The animation component takes advantage of shortcut updates of\n  positions, rotations, and scales. In later versions of A-Frame, A-Frame allows\n  us to performantly modify these transformation properties without going\n  through the whole `.setAtttribute` flow.\n- **Synchronous:** Setting a component is synchronous, meaning it takes effect\n  immediately. With `<a-animation>`, we must wait for it to append to the DOM\n  and register a callback listener.\n- **Consistency with the Framework:** The animation component fits into\n  A-Frame's entity-component-system framework. The `<a-animation>` tag is the\n  only outlier in which we must use a DOM element to modify an entity.\n- **Simpler API:** The animation component uses anime.js, a popular and simple\n  JavaScript animation library. `<a-animation>`'s API is loosely based off of\n  Web Animations draft specification which is overly complex.\n- **Easier Maintenance:** The animation component uses A-Frame's component API\n  as well as anime.js. `<a-animation>` uses the Custom Element polyfill directly\n  with tween.js. anime.js's features makes the animation codebase much slimmer\n  (140 vs 550 lines of code).\n- **Features:** The animation component has the features of the newly popular\n  anime.js library (e.g., color interpolation).\n- **Faster Development:** Being detached from the A-Frame core library means faster\n  iteration of features. Due to being easier to maintain, having more features, and\n  not being tied to A-Frame versions, we can add things quickly such as\n  timeline support.\n- **anime.js**: anime.js has great performance over Tween.js and tons of great\n  animation features.\n- **Less Bugs**: `<a-animation>` has not been touched in ages. This component\n  has lesss issues filed against it, and people usually end up switching to the\n  component once they run into issues with `<a-animation>`.\n",
  "readmeFilename": "README.md",
  "_id": "aframe-animation-component@5.1.2",
  "dist": {
    "shasum": "674c7c558ddf57bd7787fb60169b66f6ba778c41"
  },
  "_from": "aframe-animation-component@^5.1.2",
  "_resolved": "https://registry.npmjs.org/aframe-animation-component/-/aframe-animation-component-5.1.2.tgz"
}
