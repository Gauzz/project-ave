{
  "name": "aframe-keyboard-controls",
  "version": "1.3.0",
  "description": "Keyboard controls for A-Frame.",
  "main": "keyboard-controls.js",
  "config": {
    "demo_host": "localhost",
    "demo_port": 8000
  },
  "scripts": {
    "dev": "budo browser.js:bundle.js --dir examples --port $npm_package_config_demo_port --host $npm_package_config_demo_host --live",
    "dist": "webpack browser.js dist/aframe-keyboard-controls.js && webpack -p browser.js dist/aframe-keyboard-controls.min.js",
    "postpublish": "npm run dist",
    "test": "karma start ./tests/karma.conf.js",
    "preversion": "karma start ./tests/karma.conf.js --single-run",
    "version": "npm run dist && git add -A dist",
    "postversion": "git push && git push --tags && npm publish"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/donmccurdy/aframe-keyboard-controls.git"
  },
  "keywords": [
    "aframe",
    "aframe-component",
    "aframe-vr",
    "vr",
    "mozvr",
    "webvr",
    "keyboard",
    "controls",
    "wasd",
    "input"
  ],
  "author": {
    "name": "Don McCurdy",
    "email": "dm@donmccurdy.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/donmccurdy/aframe-keyboard-controls/issues"
  },
  "homepage": "https://github.com/donmccurdy/aframe-keyboard-controls#readme",
  "dependencies": {},
  "devDependencies": {
    "aframe-core": "^0.1.3",
    "browserify": "^12.0.1",
    "browserify-css": "^0.8.3",
    "budo": "^7.1.0",
    "chai": "^3.4.1",
    "chai-shallow-deep-equal": "^1.3.0",
    "karma": "^0.13.15",
    "karma-browserify": "^4.4.2",
    "karma-chai-shallow-deep-equal": "0.0.4",
    "karma-firefox-launcher": "^0.1.7",
    "karma-mocha": "^0.2.1",
    "karma-mocha-reporter": "^1.1.3",
    "karma-sinon-chai": "^1.1.0",
    "mocha": "^2.3.4",
    "webpack": "^1.12.9"
  },
  "readme": "# A-Frame `keyboard-controls` Component\n\nKeyboard controls for A-Frame.\n\n## Overview\n\nBindings and events for keyboard controls on an A-Frame VR scene. When combined with [ProxyControls.js](https://proxy-controls.donmccurdy.com) (with the [proxy-controls](https://github.com/donmccurdy/aframe-proxy-controls) component for A-Frame), can also receive remote keyboard input by WebRTC.\n\n## Usage\n\nMovement + keyboard events:\n\n```html\n<a-scene>\n  <a-entity camera\n            keyboard-controls>\n  </a-entity>\n</a-scene>\n```\n\nKeyboard events only (no movement):\n\n```html\n<a-scene>\n  <a-entity camera\n            keyboard-controls=\"enabled: false\">\n  </a-entity>\n</a-scene>\n```\n\nThe full list of options can be seen in\n[`keyboard-controls.js`](keyboard-controls.js).\n\n## Usage + Remote Device\n\n[ProxyControls.js ⇢ Docs](http://localhost:3000/#/docs#remote-device)\n\nExample:\n\n```html\n<a-scene proxy-controls>\n  <a-entity camera\n            keyboard-controls>\n  </a-entity>\n</a-scene>\n```\n\n## Check Keyboard State\n\nTo check the pressed/unpressed state of a given [Keyboard.code](https://w3c.github.io/uievents-code/#code-value-tables), use the `isPressed()` method:\n\n```javascript\nvar keyboardControls = el.components['keyboard-controls'];\nkeyboardControls.isPressed('ArrowLeft');\n```\n\n## Events\n\n`keyboard-controls` comes with a polyfill guaranteeing support for [KeyboardEvent.key](https://www.w3.org/TR/DOM-Level-3-Events-key/) and [KeyboardEvent.code](https://w3c.github.io/uievents-code/). When a `keydown` or `keyup` event is detected, an extra event is created with the `code` attached. Example usage:\n\n```html\n<a-entity keyboard-controls\n          sound=\"src: reload.wav;\n                 on: keydown:KeyR\">\n</a-entity>\n```\n\nA complete list of `code` values may be found [here](https://w3c.github.io/uievents-code/#code-value-tables).\n\n## Known Issues\n\nIn OS X, pressing the Command/Meta (⌘) key blocks all other key events. For example, pressing `A`, pressing `⌘`, releasing `A`, and then releasing `⌘` would create a `keydown:KeyA` event, but no `keyup:KeyA`. Because of this, I do not recommend using the Command/Meta key in your apps.\n",
  "readmeFilename": "README.md",
  "_id": "aframe-keyboard-controls@1.3.0",
  "dist": {
    "shasum": "5b19ec65baf21386dfcb50e3ad6adb46359bbd46"
  },
  "deprecated": "Use A-Frame Extras, instead.",
  "_from": "aframe-keyboard-controls@^1.2.1",
  "_resolved": "https://registry.npmjs.org/aframe-keyboard-controls/-/aframe-keyboard-controls-1.3.0.tgz"
}
